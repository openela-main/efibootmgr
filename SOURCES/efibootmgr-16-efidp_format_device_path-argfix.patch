diff -r -u -x .git ../efibootmgr-16.orig/src/efibootdump.c ./src/efibootdump.c
--- ../efibootmgr-16.orig/src/efibootdump.c	2018-04-09 15:38:51.000000000 -0500
+++ ./src/efibootdump.c	2020-08-06 15:27:27.679192698 -0500
@@ -67,8 +67,8 @@
 	text_path = alloca(text_path_len);
 	if (!text_path)
 		error(100, "Couldn't allocate memory");
-	rc = efidp_format_device_path(text_path, text_path_len,
-				      dp, pathlen);
+	rc = efidp_format_device_path((unsigned char *)text_path,
+				      text_path_len, dp, pathlen);
 	if (rc < 0) {
 		printf("<bad device path>");
 		return;
diff -r -u -x .git ../efibootmgr-16.orig/src/efibootmgr.c ./src/efibootmgr.c
--- ../efibootmgr-16.orig/src/efibootmgr.c	2018-04-09 15:38:51.000000000 -0500
+++ ./src/efibootmgr.c	2020-08-06 15:27:12.433089400 -0500
@@ -941,8 +941,8 @@
 			pathlen = efi_loadopt_pathlen(load_option,
 						      boot->data_size);
 			dp = efi_loadopt_path(load_option, boot->data_size);
-			rc = efidp_format_device_path(text_path, text_path_len,
-						      dp, pathlen);
+			rc = efidp_format_device_path((unsigned char *)text_path,
+						      text_path_len, dp, pathlen);
 			if (rc < 0)
 				error(18, "Could not parse device path");
 			rc += 1;
@@ -952,8 +952,8 @@
 			if (!text_path)
 				error(19, "Could not parse device path");
 
-			rc = efidp_format_device_path(text_path, text_path_len,
-						      dp, pathlen);
+			rc = efidp_format_device_path((unsigned char *)text_path,
+						      text_path_len, dp, pathlen);
 			if (rc < 0)
 				error(20, "Could not parse device path");
 			printf("\t%s", text_path);
diff -r -u -x .git ../efibootmgr-16.orig/src/eficonman.c ./src/eficonman.c
--- ../efibootmgr-16.orig/src/eficonman.c	2018-04-09 15:38:51.000000000 -0500
+++ ./src/eficonman.c	2020-08-06 15:08:19.614514403 -0500
@@ -76,7 +76,7 @@
 		dp = whole_dp;
 		while (dp) {
 			ssize_t sz, ssz;
-			char *s = NULL;
+			unsigned char *s = NULL;
 
 			if (efidp_is_multiinstance(dp)) {
 				sz = efidp_instance_size(dp);
